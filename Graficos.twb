<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='win' version='9.0' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 9000.15.0527.1215                                -->
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='output' inline='true' name='textscan.42250.933698206019' version='9.0'>
      <connection class='textscan' directory='//VBOXSVR/algo3-tp1' filename='output.csv' password='' server=''>
        <relation name='output#csv' table='[output#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='case' ordinal='0' />
            <column datatype='real' name='explorers' ordinal='1' />
            <column datatype='real' name='friendships' ordinal='2' />
            <column datatype='integer' name='method' ordinal='3' />
            <column datatype='string' name='name' ordinal='4' />
            <column datatype='integer' name='run' ordinal='5' />
            <column datatype='string' name='timer' ordinal='6' />
            <column datatype='integer' name='value' ordinal='7' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>case</remote-name>
            <remote-type>20</remote-type>
            <local-name>[case]</local-name>
            <parent-name>[output#csv]</parent-name>
            <remote-alias>case</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>explorers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[explorers]</local-name>
            <parent-name>[output#csv]</parent-name>
            <remote-alias>explorers</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>friendships</remote-name>
            <remote-type>5</remote-type>
            <local-name>[friendships]</local-name>
            <parent-name>[output#csv]</parent-name>
            <remote-alias>friendships</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>method</remote-name>
            <remote-type>20</remote-type>
            <local-name>[method]</local-name>
            <parent-name>[output#csv]</parent-name>
            <remote-alias>method</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[output#csv]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>run</remote-name>
            <remote-type>20</remote-type>
            <local-name>[run]</local-name>
            <parent-name>[output#csv]</parent-name>
            <remote-alias>run</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timer</remote-name>
            <remote-type>129</remote-type>
            <local-name>[timer]</local-name>
            <parent-name>[output#csv]</parent-name>
            <remote-alias>timer</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>value</remote-name>
            <remote-type>20</remote-type>
            <local-name>[value]</local-name>
            <parent-name>[output#csv]</parent-name>
            <remote-alias>value</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[output#csv]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' caption='Case' datatype='integer' name='[case]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='Sum' datatype='real' name='[explorers]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='Sum' datatype='real' name='[friendships]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='Sum' caption='Method' datatype='integer' name='[method]' role='dimension' type='ordinal'>
      </column>
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;complejidad&quot;' value='Aleatorio' />
          <alias key='&quot;complejidad_best&quot;' value='Mejor Caso' />
          <alias key='&quot;complejidad_normal&quot;' value='Con Podas' />
          <alias key='&quot;complejidad_random&quot;' value='Caso Aleatorio' />
          <alias key='&quot;complejidad_worst&quot;' value='Peor Caso' />
        </aliases>
      </column>
      <column aggregation='Sum' caption='Run' datatype='integer' name='[run]' role='dimension' type='ordinal'>
      </column>
      <column caption='Timer' datatype='string' name='[timer]' role='dimension' type='nominal'>
      </column>
      <column caption='Value' datatype='integer' name='[value]' role='measure' type='quantitative'>
      </column>
      <column-instance column='[explorers]' derivation='None' name='[none:explorers:ok]' pivot='key' type='ordinal' />
      <column-instance column='[friendships]' derivation='None' name='[none:friendships:ok]' pivot='key' type='ordinal' />
      <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:friendships:ok]' type='palette'>
            <map to='#1f77b4'>
              <bucket>1.0</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>3.0</bucket>
            </map>
            <map to='#d62728'>
              <bucket>4.0</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>2.0</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:explorers:ok]' type='palette'>
            <map to='#1f77b4'>
              <bucket>10.0</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>11.0</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>7.0</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>5.0</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>4.0</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>8.0</bucket>
            </map>
            <map to='#d62728'>
              <bucket>3.0</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>6.0</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>9.0</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:name:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;complejidad_best&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;complejidad_random&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;complejidad_normal&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;complejidad&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;complejidad_worst&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Tiempo de Explorers (con A=1)'>
      <table>
        <view>
          <datasources>
            <datasource caption='output' name='textscan.42250.933698206019' />
          </datasources>
          <datasource-dependencies datasource='textscan.42250.933698206019'>
            <column-instance column='[value]' derivation='Avg' name='[avg:value:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' datatype='real' name='[explorers]' role='dimension' type='ordinal'>
            </column>
            <column aggregation='Sum' datatype='real' name='[friendships]' role='dimension' type='ordinal'>
            </column>
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;complejidad&quot;' value='Aleatorio' />
                <alias key='&quot;complejidad_best&quot;' value='Mejor Caso' />
                <alias key='&quot;complejidad_normal&quot;' value='Con Podas' />
                <alias key='&quot;complejidad_random&quot;' value='Caso Aleatorio' />
                <alias key='&quot;complejidad_worst&quot;' value='Peor Caso' />
              </aliases>
            </column>
            <column-instance column='[explorers]' derivation='None' name='[none:explorers:qk]' pivot='key' type='quantitative' />
            <column-instance column='[friendships]' derivation='None' name='[none:friendships:ok]' pivot='key' type='ordinal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column caption='Value' datatype='integer' name='[value]' role='measure' type='quantitative'>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42250.933698206019].[none:friendships:ok]'>
            <groupfilter function='member' level='[none:friendships:ok]' member='1.0' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.42250.933698206019].[none:name:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:name:nk]' member='&quot;complejidad_normal&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;complejidad_worst&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.42250.933698206019].[none:friendships:ok]</column>
            <column>[textscan.42250.933698206019].[none:name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[textscan.42250.933698206019].[avg:value:qk]' scope='rows' value='Tiempo Promedio (microsegundos)' />
            <format attr='subtitle' class='0' field='[textscan.42250.933698206019].[avg:value:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.42250.933698206019].[avg:value:qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[textscan.42250.933698206019].[none:explorers:qk]' scope='cols' value='Cantidad de Exploradoras' />
            <format attr='subtitle' class='0' field='[textscan.42250.933698206019].[none:explorers:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.42250.933698206019].[none:explorers:qk]' scope='cols' value='true' />
            <encoding attr='space' class='0' field='[textscan.42250.933698206019].[none:explorers:qk]' field-type='quantitative' major-origin='0.0' major-spacing='1.0' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[textscan.42250.933698206019].[none:name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[textscan.42250.933698206019].[avg:value:qk]</rows>
        <cols>[textscan.42250.933698206019].[none:explorers:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Tiempo de Explorers (con E=8)'>
      <table>
        <view>
          <datasources>
            <datasource caption='output' name='textscan.42250.933698206019' />
          </datasources>
          <datasource-dependencies datasource='textscan.42250.933698206019'>
            <column-instance column='[value]' derivation='Avg' name='[avg:value:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' datatype='real' name='[explorers]' role='dimension' type='ordinal'>
            </column>
            <column aggregation='Sum' datatype='real' name='[friendships]' role='dimension' type='ordinal'>
            </column>
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;complejidad&quot;' value='Aleatorio' />
                <alias key='&quot;complejidad_best&quot;' value='Mejor Caso' />
                <alias key='&quot;complejidad_normal&quot;' value='Con Podas' />
                <alias key='&quot;complejidad_random&quot;' value='Caso Aleatorio' />
                <alias key='&quot;complejidad_worst&quot;' value='Peor Caso' />
              </aliases>
            </column>
            <column-instance column='[explorers]' derivation='None' name='[none:explorers:ok]' pivot='key' type='ordinal' />
            <column-instance column='[friendships]' derivation='None' name='[none:friendships:qk]' pivot='key' type='quantitative' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column caption='Value' datatype='integer' name='[value]' role='measure' type='quantitative'>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42250.933698206019].[none:explorers:ok]'>
            <groupfilter function='member' level='[none:explorers:ok]' member='8.0' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.42250.933698206019].[none:name:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:name:nk]' member='&quot;complejidad_normal&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;complejidad_worst&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.42250.933698206019].[none:explorers:ok]</column>
            <column>[textscan.42250.933698206019].[none:name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[textscan.42250.933698206019].[none:friendships:qk]' scope='cols' value='Cantidad de Amistades' />
            <format attr='subtitle' class='0' field='[textscan.42250.933698206019].[none:friendships:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.42250.933698206019].[none:friendships:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[textscan.42250.933698206019].[avg:value:qk]' scope='rows' value='Tiempo Promedio (microsegundos)' />
            <format attr='subtitle' class='0' field='[textscan.42250.933698206019].[avg:value:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.42250.933698206019].[avg:value:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[textscan.42250.933698206019].[none:name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[textscan.42250.933698206019].[avg:value:qk]</rows>
        <cols>[textscan.42250.933698206019].[none:friendships:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Tiempo de Explorers Random (A=1)'>
      <table>
        <view>
          <datasources>
            <datasource caption='output' name='textscan.42250.933698206019' />
          </datasources>
          <datasource-dependencies datasource='textscan.42250.933698206019'>
            <column-instance column='[value]' derivation='Avg' name='[avg:value:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' datatype='real' name='[explorers]' role='dimension' type='ordinal'>
            </column>
            <column aggregation='Sum' datatype='real' name='[friendships]' role='dimension' type='ordinal'>
            </column>
            <column aggregation='Sum' caption='Method' datatype='integer' name='[method]' role='dimension' type='ordinal'>
            </column>
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;complejidad&quot;' value='Aleatorio' />
                <alias key='&quot;complejidad_best&quot;' value='Mejor Caso' />
                <alias key='&quot;complejidad_normal&quot;' value='Con Podas' />
                <alias key='&quot;complejidad_random&quot;' value='Caso Aleatorio' />
                <alias key='&quot;complejidad_worst&quot;' value='Peor Caso' />
              </aliases>
            </column>
            <column-instance column='[explorers]' derivation='None' name='[none:explorers:ok]' pivot='key' type='ordinal' />
            <column-instance column='[explorers]' derivation='None' name='[none:explorers:qk]' pivot='key' type='quantitative' />
            <column-instance column='[friendships]' derivation='None' name='[none:friendships:ok]' pivot='key' type='ordinal' />
            <column-instance column='[method]' derivation='None' name='[none:method:ok]' pivot='key' type='ordinal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[timer]' derivation='None' name='[none:timer:nk]' pivot='key' type='nominal' />
            <column caption='Timer' datatype='string' name='[timer]' role='dimension' type='nominal'>
            </column>
            <column caption='Value' datatype='integer' name='[value]' role='measure' type='quantitative'>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42250.933698206019].[none:explorers:ok]'>
            <groupfilter from='3.0' function='range' level='[none:explorers:ok]' to='9.0' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.42250.933698206019].[none:friendships:ok]'>
            <groupfilter function='member' level='[none:friendships:ok]' member='1.0' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.42250.933698206019].[none:method:ok]'>
            <groupfilter function='member' level='[none:method:ok]' member='3' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.42250.933698206019].[none:name:nk]'>
            <groupfilter function='member' level='[none:name:nk]' member='&quot;complejidad&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.42250.933698206019].[none:timer:nk]'>
            <groupfilter function='member' level='[none:timer:nk]' member='&quot;Explorers Backtracking Search Timer&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.42250.933698206019].[none:method:ok]</column>
            <column>[textscan.42250.933698206019].[none:name:nk]</column>
            <column>[textscan.42250.933698206019].[none:timer:nk]</column>
            <column>[textscan.42250.933698206019].[none:friendships:ok]</column>
            <column>[textscan.42250.933698206019].[none:explorers:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[textscan.42250.933698206019].[avg:value:qk]' scope='rows' value='Tiempo Promedio (microsegundos)' />
            <format attr='subtitle' class='0' field='[textscan.42250.933698206019].[avg:value:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.42250.933698206019].[avg:value:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[textscan.42250.933698206019].[none:explorers:qk]' field-type='quantitative' major-origin='3.0' major-spacing='1.0' minor-origin='3.0' minor-show='false' minor-spacing='1.0' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[textscan.42250.933698206019].[none:explorers:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.42250.933698206019].[none:explorers:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[textscan.42250.933698206019].[none:explorers:qk]' scope='cols' value='Cantidad de Exploradoras' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[textscan.42250.933698206019].[avg:value:qk]</rows>
        <cols>[textscan.42250.933698206019].[none:explorers:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Tiempo de Explorers Random (E=10)'>
      <table>
        <view>
          <datasources>
            <datasource caption='output' name='textscan.42250.933698206019' />
          </datasources>
          <datasource-dependencies datasource='textscan.42250.933698206019'>
            <column-instance column='[value]' derivation='Avg' name='[avg:value:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' datatype='real' name='[explorers]' role='dimension' type='ordinal'>
            </column>
            <column aggregation='Sum' datatype='real' name='[friendships]' role='dimension' type='ordinal'>
            </column>
            <column aggregation='Sum' caption='Method' datatype='integer' name='[method]' role='dimension' type='ordinal'>
            </column>
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;complejidad&quot;' value='Aleatorio' />
                <alias key='&quot;complejidad_best&quot;' value='Mejor Caso' />
                <alias key='&quot;complejidad_normal&quot;' value='Con Podas' />
                <alias key='&quot;complejidad_random&quot;' value='Caso Aleatorio' />
                <alias key='&quot;complejidad_worst&quot;' value='Peor Caso' />
              </aliases>
            </column>
            <column-instance column='[explorers]' derivation='None' name='[none:explorers:ok]' pivot='key' type='ordinal' />
            <column-instance column='[friendships]' derivation='None' name='[none:friendships:qk]' pivot='key' type='quantitative' />
            <column-instance column='[method]' derivation='None' name='[none:method:ok]' pivot='key' type='ordinal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[timer]' derivation='None' name='[none:timer:nk]' pivot='key' type='nominal' />
            <column caption='Timer' datatype='string' name='[timer]' role='dimension' type='nominal'>
            </column>
            <column caption='Value' datatype='integer' name='[value]' role='measure' type='quantitative'>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42250.933698206019].[none:explorers:ok]'>
            <groupfilter function='member' level='[none:explorers:ok]' member='10.0' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.42250.933698206019].[none:method:ok]'>
            <groupfilter function='member' level='[none:method:ok]' member='3' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.42250.933698206019].[none:name:nk]'>
            <groupfilter function='member' level='[none:name:nk]' member='&quot;complejidad&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.42250.933698206019].[none:timer:nk]'>
            <groupfilter function='member' level='[none:timer:nk]' member='&quot;Explorers Backtracking Search Timer&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.42250.933698206019].[none:method:ok]</column>
            <column>[textscan.42250.933698206019].[none:name:nk]</column>
            <column>[textscan.42250.933698206019].[none:timer:nk]</column>
            <column>[textscan.42250.933698206019].[none:explorers:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[textscan.42250.933698206019].[none:friendships:qk]' scope='cols' value='Cantidad de Amistades' />
            <format attr='subtitle' class='0' field='[textscan.42250.933698206019].[none:friendships:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.42250.933698206019].[none:friendships:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[textscan.42250.933698206019].[avg:value:qk]' scope='rows' value='Tiempo Promedio (microsegundos)' />
            <format attr='subtitle' class='0' field='[textscan.42250.933698206019].[avg:value:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.42250.933698206019].[avg:value:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <trendline degree='2' enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' exclude-panes='false' fit='polynomial'>
            </trendline>
          </pane>
        </panes>
        <rows>[textscan.42250.933698206019].[avg:value:qk]</rows>
        <cols>[textscan.42250.933698206019].[none:friendships:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Tiempo de Median (casos aleatorios)'>
      <table>
        <view>
          <datasources>
            <datasource caption='output' name='textscan.42250.933698206019' />
          </datasources>
          <datasource-dependencies datasource='textscan.42250.933698206019'>
            <column caption='[Case]*1000+1000' datatype='integer' name='[Calculation_4330904115907228]' role='measure' type='quantitative' user:unnamed='Tiempo de Median (casos aleatorios)'>
              <calculation class='tableau' formula='[case]*1000+1000' />
            </column>
            <column-instance column='[value]' derivation='Avg' name='[avg:value:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Method' datatype='integer' name='[method]' role='dimension' type='ordinal'>
            </column>
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;complejidad&quot;' value='Aleatorio' />
                <alias key='&quot;complejidad_best&quot;' value='Mejor Caso' />
                <alias key='&quot;complejidad_normal&quot;' value='Con Podas' />
                <alias key='&quot;complejidad_random&quot;' value='Caso Aleatorio' />
                <alias key='&quot;complejidad_worst&quot;' value='Peor Caso' />
              </aliases>
            </column>
            <column-instance column='[Calculation_4330904115907228]' derivation='None' name='[none:Calculation_4330904115907228:qk]' pivot='key' type='quantitative' />
            <column-instance column='[method]' derivation='None' name='[none:method:ok]' pivot='key' type='ordinal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[timer]' derivation='None' name='[none:timer:nk]' pivot='key' type='nominal' />
            <column caption='Timer' datatype='string' name='[timer]' role='dimension' type='nominal'>
            </column>
            <column caption='Value' datatype='integer' name='[value]' role='measure' type='quantitative'>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42250.933698206019].[none:method:ok]'>
            <groupfilter function='member' level='[none:method:ok]' member='2' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.42250.933698206019].[none:name:nk]'>
            <groupfilter function='member' level='[none:name:nk]' member='&quot;complejidad_random&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.42250.933698206019].[none:timer:nk]'>
            <groupfilter function='member' level='[none:timer:nk]' member='&quot;Median Timer&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.42250.933698206019].[none:name:nk]</column>
            <column>[textscan.42250.933698206019].[none:method:ok]</column>
            <column>[textscan.42250.933698206019].[none:timer:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[textscan.42250.933698206019].[avg:value:qk]' scope='rows' value='Tiempo Promedio (microsegundos)' />
            <format attr='subtitle' class='0' field='[textscan.42250.933698206019].[avg:value:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.42250.933698206019].[avg:value:qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[textscan.42250.933698206019].[none:Calculation_4330904115907228:qk]' scope='cols' value='Tamaño de Entrada' />
            <format attr='subtitle' class='0' field='[textscan.42250.933698206019].[none:Calculation_4330904115907228:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.42250.933698206019].[none:Calculation_4330904115907228:qk]' scope='cols' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.42250.933698206019].[none:name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[textscan.42250.933698206019].[avg:value:qk]</rows>
        <cols>[textscan.42250.933698206019].[none:Calculation_4330904115907228:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Tiempo de Median (mejores y peores casos)'>
      <table>
        <view>
          <datasources>
            <datasource caption='output' name='textscan.42250.933698206019' />
          </datasources>
          <datasource-dependencies datasource='textscan.42250.933698206019'>
            <column caption='[Case]*1000 + 1000' datatype='integer' name='[Calculation_2760904085020538]' role='measure' type='quantitative' user:unnamed='Sheet 5'>
              <calculation class='tableau' formula='[case]*1000 + 1000' />
            </column>
            <column-instance column='[value]' derivation='Avg' name='[avg:value:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Method' datatype='integer' name='[method]' role='dimension' type='ordinal'>
            </column>
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;complejidad&quot;' value='Aleatorio' />
                <alias key='&quot;complejidad_best&quot;' value='Mejor Caso' />
                <alias key='&quot;complejidad_normal&quot;' value='Con Podas' />
                <alias key='&quot;complejidad_random&quot;' value='Caso Aleatorio' />
                <alias key='&quot;complejidad_worst&quot;' value='Peor Caso' />
              </aliases>
            </column>
            <column-instance column='[Calculation_2760904085020538]' derivation='None' name='[none:Calculation_2760904085020538:qk]' pivot='key' type='quantitative' />
            <column-instance column='[method]' derivation='None' name='[none:method:ok]' pivot='key' type='ordinal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[timer]' derivation='None' name='[none:timer:nk]' pivot='key' type='nominal' />
            <column caption='Timer' datatype='string' name='[timer]' role='dimension' type='nominal'>
            </column>
            <column caption='Value' datatype='integer' name='[value]' role='measure' type='quantitative'>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42250.933698206019].[none:method:ok]'>
            <groupfilter function='member' level='[none:method:ok]' member='2' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.42250.933698206019].[none:name:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:name:nk]' member='&quot;complejidad_best&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;complejidad_worst&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[textscan.42250.933698206019].[none:timer:nk]'>
            <groupfilter function='member' level='[none:timer:nk]' member='&quot;Median Timer&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.42250.933698206019].[none:name:nk]</column>
            <column>[textscan.42250.933698206019].[none:method:ok]</column>
            <column>[textscan.42250.933698206019].[none:timer:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[textscan.42250.933698206019].[none:Calculation_2760904085020538:qk]' scope='cols' value='Tamaño de Entrada' />
            <format attr='subtitle' class='0' field='[textscan.42250.933698206019].[none:Calculation_2760904085020538:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.42250.933698206019].[none:Calculation_2760904085020538:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[textscan.42250.933698206019].[avg:value:qk]' scope='rows' value='Tiempo Promedio Podado en 0.10 (microsegundos)' />
            <format attr='subtitle' class='0' field='[textscan.42250.933698206019].[avg:value:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.42250.933698206019].[avg:value:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[textscan.42250.933698206019].[none:name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[textscan.42250.933698206019].[avg:value:qk]</rows>
        <cols>[textscan.42250.933698206019].[none:Calculation_2760904085020538:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Tiempo de Path (casos aleatorios)'>
      <table>
        <view>
          <datasources>
            <datasource caption='output' name='textscan.42250.933698206019' />
          </datasources>
          <datasource-dependencies datasource='textscan.42250.933698206019'>
            <column caption='[Case]*250 + 1' datatype='integer' name='[Calculation_6030904110618004]' role='measure' type='quantitative' user:unnamed='Sheet 5'>
              <calculation class='tableau' formula='[case]*250 + 1' />
            </column>
            <column aggregation='Sum' caption='Method' datatype='integer' name='[method]' role='dimension' type='ordinal'>
            </column>
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;complejidad&quot;' value='Aleatorio' />
                <alias key='&quot;complejidad_best&quot;' value='Mejor Caso' />
                <alias key='&quot;complejidad_normal&quot;' value='Con Podas' />
                <alias key='&quot;complejidad_random&quot;' value='Caso Aleatorio' />
                <alias key='&quot;complejidad_worst&quot;' value='Peor Caso' />
              </aliases>
            </column>
            <column-instance column='[Calculation_6030904110618004]' derivation='None' name='[none:Calculation_6030904110618004:qk]' pivot='key' type='quantitative' />
            <column-instance column='[method]' derivation='None' name='[none:method:ok]' pivot='key' type='ordinal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[timer]' derivation='None' name='[none:timer:nk]' pivot='key' type='nominal' />
            <column-instance column='[value]' derivation='None' name='[none:value:qk]' pivot='key' type='quantitative' />
            <column caption='Timer' datatype='string' name='[timer]' role='dimension' type='nominal'>
            </column>
            <column caption='Value' datatype='integer' name='[value]' role='measure' type='quantitative'>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42250.933698206019].[none:method:ok]'>
            <groupfilter function='member' level='[none:method:ok]' member='1' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.42250.933698206019].[none:name:nk]'>
            <groupfilter function='member' level='[none:name:nk]' member='&quot;complejidad&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.42250.933698206019].[none:timer:nk]'>
            <groupfilter function='member' level='[none:timer:nk]' member='&quot;Path Timer&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.42250.933698206019].[none:name:nk]</column>
            <column>[textscan.42250.933698206019].[none:timer:nk]</column>
            <column>[textscan.42250.933698206019].[none:method:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[textscan.42250.933698206019].[none:value:qk]' scope='rows' value='Tiempo Promedio (microsegundos)' />
            <format attr='subtitle' class='0' field='[textscan.42250.933698206019].[none:value:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.42250.933698206019].[none:value:qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[textscan.42250.933698206019].[none:Calculation_6030904110618004:qk]' scope='cols' value='Tamaño de Entrada' />
            <format attr='subtitle' class='0' field='[textscan.42250.933698206019].[none:Calculation_6030904110618004:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.42250.933698206019].[none:Calculation_6030904110618004:qk]' scope='cols' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[textscan.42250.933698206019].[none:name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[textscan.42250.933698206019].[none:value:qk]</rows>
        <cols>[textscan.42250.933698206019].[none:Calculation_6030904110618004:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Tiempo de Path (mejores y peores casos)'>
      <table>
        <view>
          <datasources>
            <datasource caption='output' name='textscan.42250.933698206019' />
          </datasources>
          <datasource-dependencies datasource='textscan.42250.933698206019'>
            <column caption='[Case]*250 + 1' datatype='integer' name='[Calculation_4320904101412484]' role='measure' type='quantitative' user:unnamed='Tiempo de Path Random'>
              <calculation class='tableau' formula='[case]*250 + 1' />
            </column>
            <column-instance column='[value]' derivation='Avg' name='[avg:value:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Method' datatype='integer' name='[method]' role='dimension' type='ordinal'>
            </column>
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;complejidad&quot;' value='Aleatorio' />
                <alias key='&quot;complejidad_best&quot;' value='Mejor Caso' />
                <alias key='&quot;complejidad_normal&quot;' value='Con Podas' />
                <alias key='&quot;complejidad_random&quot;' value='Caso Aleatorio' />
                <alias key='&quot;complejidad_worst&quot;' value='Peor Caso' />
              </aliases>
            </column>
            <column-instance column='[Calculation_4320904101412484]' derivation='None' name='[none:Calculation_4320904101412484:qk]' pivot='key' type='quantitative' />
            <column-instance column='[method]' derivation='None' name='[none:method:ok]' pivot='key' type='ordinal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[timer]' derivation='None' name='[none:timer:nk]' pivot='key' type='nominal' />
            <column caption='Timer' datatype='string' name='[timer]' role='dimension' type='nominal'>
            </column>
            <column caption='Value' datatype='integer' name='[value]' role='measure' type='quantitative'>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42250.933698206019].[none:method:ok]'>
            <groupfilter function='member' level='[none:method:ok]' member='1' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.42250.933698206019].[none:name:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:name:nk]' member='&quot;complejidad_best&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;complejidad_worst&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[textscan.42250.933698206019].[none:timer:nk]'>
            <groupfilter function='member' level='[none:timer:nk]' member='&quot;Path Timer&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.42250.933698206019].[none:method:ok]</column>
            <column>[textscan.42250.933698206019].[none:timer:nk]</column>
            <column>[textscan.42250.933698206019].[none:name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[textscan.42250.933698206019].[none:Calculation_4320904101412484:qk]' scope='cols' value='Tamaño de Entrada' />
            <format attr='subtitle' class='0' field='[textscan.42250.933698206019].[none:Calculation_4320904101412484:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.42250.933698206019].[none:Calculation_4320904101412484:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[textscan.42250.933698206019].[avg:value:qk]' scope='rows' value='Tiempo Promedio (microsegundos)' />
            <format attr='subtitle' class='0' field='[textscan.42250.933698206019].[avg:value:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.42250.933698206019].[avg:value:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.42250.933698206019].[none:name:nk]' />
            </encodings>
            <trendline enable-confidence-bands='true' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' exclude-panes='false' fit='linear'>
            </trendline>
          </pane>
        </panes>
        <rows>[textscan.42250.933698206019].[avg:value:qk]</rows>
        <cols>[textscan.42250.933698206019].[none:Calculation_4320904101412484:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Tiempo de Explorers Random Dash'>
      <style>
      </style>
      <size maxheight='300' maxwidth='800' minheight='300' minwidth='800' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='1' name='Tiempo de Explorers Random (E=10)' show-title='true' w='50000' x='0' y='0'>
          </zone>
          <zone h='100000' id='3' name='Tiempo de Explorers Random (A=1)' show-title='true' w='50000' x='50000' y='0'>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Tiempo de Median (casos aleatorios) Dash'>
      <style>
      </style>
      <size maxheight='300' maxwidth='600' minheight='300' minwidth='600' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='99333' x='0' y='0'>
              <zone h='100000' id='1' name='Tiempo de Median (casos aleatorios)' show-title='true' w='99333' x='0' y='0'>
              </zone>
            </zone>
          </zone>
        </zone>
        <zone h='11667' id='6' name='Tiempo de Median (casos aleatorios)' pane-specification-id='0' param='[textscan.42250.933698206019].[none:name:nk]' type='color' w='23333' x='73667' y='62667'>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Tiempo de Median (mejores y peores casos) Dash'>
      <style>
      </style>
      <size maxheight='300' maxwidth='600' minheight='300' minwidth='600' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='99333' x='0' y='0'>
              <zone h='100000' id='1' name='Tiempo de Median (mejores y peores casos)' show-title='true' w='99333' x='0' y='0'>
              </zone>
            </zone>
          </zone>
        </zone>
        <zone h='18333' id='7' name='Tiempo de Median (mejores y peores casos)' pane-specification-id='0' param='[textscan.42250.933698206019].[none:name:nk]' type='color' w='23333' x='74833' y='59667'>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Tiempo de Path (casos aleatorios) Dash'>
      <style>
      </style>
      <size maxheight='300' maxwidth='600' minheight='300' minwidth='600' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='99333' x='0' y='0'>
              <zone h='100000' id='1' name='Tiempo de Path (casos aleatorios)' show-title='true' w='99333' x='0' y='0'>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Tiempo de Path (mejores y peores casos) Dash'>
      <style>
      </style>
      <size maxheight='300' maxwidth='600' minheight='300' minwidth='600' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='99333' x='0' y='0'>
              <zone h='100000' id='1' name='Tiempo de Path (mejores y peores casos)' show-title='true' w='99333' x='0' y='0'>
              </zone>
            </zone>
          </zone>
        </zone>
        <zone h='19667' id='7' name='Tiempo de Path (mejores y peores casos)' pane-specification-id='0' param='[textscan.42250.933698206019].[none:name:nk]' type='color' w='16333' x='78833' y='57000'>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Tiempos de Explorers Best-Worst Dash'>
      <style>
      </style>
      <size maxheight='300' maxwidth='800' minheight='300' minwidth='800' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='3' type='layout-basic' w='100000' x='0' y='0'>
            <zone h='100000' id='1' name='Tiempo de Explorers (con A=1)' show-title='true' w='49750' x='0' y='0'>
            </zone>
            <zone h='100000' id='7' name='Tiempo de Explorers (con E=8)' show-title='true' w='50250' x='49750' y='0'>
            </zone>
          </zone>
        </zone>
        <zone h='18333' id='6' name='Tiempo de Explorers (con A=1)' pane-specification-id='0' param='[textscan.42250.933698206019].[none:name:nk]' type='color' w='17500' x='80500' y='62667'>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='dashboard' maximized='0' name='Tiempo de Path (mejores y peores casos) Dash'>
      <zones>
        <zone name='Tiempo de Path (mejores y peores casos)'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='vertical'>
                <node-reference>
                  <axis>[textscan.42250.933698206019].[avg:value:qk]</axis>
                </node-reference>
                <page-reference>
                </page-reference>
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </zone>
        <zone name='Tiempo de Path (mejores y peores casos)' pane-specification-id='0' param='[textscan.42250.933698206019].[none:name:nk]' type='color' />
      </zones>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Tiempo de Path (casos aleatorios) Dash'>
      <active id='1' />
      <zones>
        <zone name='Tiempo de Path (casos aleatorios)'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[textscan.42250.933698206019].[none:name:nk]</field>
            </color-one-way>
          </highlight>
        </zone>
      </zones>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Tiempo de Median (mejores y peores casos) Dash'>
      <active id='1' />
      <zones>
        <zone name='Tiempo de Median (mejores y peores casos)'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Tiempo de Median (mejores y peores casos)' pane-specification-id='0' param='[textscan.42250.933698206019].[none:name:nk]' type='color' />
      </zones>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Tiempo de Median (casos aleatorios) Dash'>
      <zones>
        <zone name='Tiempo de Median (casos aleatorios)'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[textscan.42250.933698206019].[none:name:nk]</field>
            </color-one-way>
          </highlight>
        </zone>
        <zone name='Tiempo de Median (casos aleatorios)' pane-specification-id='0' param='[textscan.42250.933698206019].[none:name:nk]' type='color' />
      </zones>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Tiempo de Explorers Random Dash'>
      <zones>
        <zone name='Tiempo de Explorers Random (E=10)'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Tiempo de Explorers Random (A=1)'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
      </zones>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='1' name='Tiempos de Explorers Best-Worst Dash'>
      <zones>
        <zone name='Tiempo de Explorers (con A=1)'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[textscan.42250.933698206019].[none:name:nk]</field>
            </color-one-way>
          </highlight>
        </zone>
        <zone name='Tiempo de Explorers (con E=8)'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Tiempo de Explorers (con A=1)' pane-specification-id='0' param='[textscan.42250.933698206019].[none:name:nk]' type='color' />
      </zones>
    </window>
    <window class='hidden-worksheet' name='Tiempo de Explorers (con A=1)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.42250.933698206019].[none:name:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[textscan.42250.933698206019].[none:explorers:ok]</field>
          <field>[textscan.42250.933698206019].[none:friendships:ok]</field>
          <field>[textscan.42250.933698206019].[none:name:nk]</field>
        </color-one-way>
      </highlight>
      <selection-collection>
      </selection-collection>
    </window>
    <window class='hidden-worksheet' name='Tiempo de Explorers (con E=8)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.42250.933698206019].[none:name:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[textscan.42250.933698206019].[none:explorers:ok]</field>
          <field>[textscan.42250.933698206019].[none:friendships:ok]</field>
          <field>[textscan.42250.933698206019].[none:name:nk]</field>
        </color-one-way>
      </highlight>
      <selection-collection>
      </selection-collection>
    </window>
    <window class='hidden-worksheet' name='Tiempo de Explorers Random (A=1)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[textscan.42250.933698206019].[none:Calculation_3660904083945271:qk]</field>
          <field>[textscan.42250.933698206019].[none:explorers:ok]</field>
          <field>[textscan.42250.933698206019].[none:friendships:ok]</field>
          <field>[textscan.42250.933698206019].[none:method:ok]</field>
          <field>[textscan.42250.933698206019].[none:name:nk]</field>
          <field>[textscan.42250.933698206019].[none:timer:nk]</field>
        </color-one-way>
      </highlight>
      <selection-collection>
        <node-selection select-tuples='false'>
          <oriented-node-reference orientation='horizontal'>
            <node-reference>
              <axis>[textscan.42250.933698206019].[none:explorers:qk]</axis>
            </node-reference>
            <page-reference>
            </page-reference>
          </oriented-node-reference>
        </node-selection>
      </selection-collection>
    </window>
    <window class='hidden-worksheet' name='Tiempo de Explorers Random (E=10)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[textscan.42250.933698206019].[none:case:ok]</field>
          <field>[textscan.42250.933698206019].[none:explorers:ok]</field>
          <field>[textscan.42250.933698206019].[none:friendships:ok]</field>
          <field>[textscan.42250.933698206019].[none:method:ok]</field>
          <field>[textscan.42250.933698206019].[none:name:nk]</field>
          <field>[textscan.42250.933698206019].[none:timer:nk]</field>
          <field>[textscan.42250.933698206019].[sum:value:qk]</field>
        </color-one-way>
      </highlight>
      <selection-collection>
        <node-selection select-tuples='false'>
          <oriented-node-reference orientation='horizontal'>
            <node-reference>
              <axis>[textscan.42250.933698206019].[none:friendships:qk]</axis>
            </node-reference>
            <page-reference>
            </page-reference>
          </oriented-node-reference>
        </node-selection>
      </selection-collection>
    </window>
    <window class='hidden-worksheet' name='Tiempo de Median (casos aleatorios)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.42250.933698206019].[none:name:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[textscan.42250.933698206019].[none:Calculation_4330904115907228:qk]</field>
          <field>[textscan.42250.933698206019].[none:Calculation_9410904115503165:qk]</field>
          <field>[textscan.42250.933698206019].[none:case:ok]</field>
          <field>[textscan.42250.933698206019].[none:method:ok]</field>
          <field>[textscan.42250.933698206019].[none:name:nk]</field>
          <field>[textscan.42250.933698206019].[none:timer:nk]</field>
        </color-one-way>
      </highlight>
      <selection-collection>
      </selection-collection>
    </window>
    <window class='hidden-worksheet' name='Tiempo de Median (mejores y peores casos)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.42250.933698206019].[none:name:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[textscan.42250.933698206019].[none:name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[textscan.42250.933698206019].[none:Calculation_2760904085020538:ok]</field>
          <field>[textscan.42250.933698206019].[none:case:ok]</field>
          <field>[textscan.42250.933698206019].[none:method:ok]</field>
          <field>[textscan.42250.933698206019].[none:timer:nk]</field>
        </color-one-way>
      </highlight>
      <selection-collection>
      </selection-collection>
    </window>
    <window class='hidden-worksheet' name='Tiempo de Path (casos aleatorios)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.42250.933698206019].[none:name:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[textscan.42250.933698206019].[none:Calculation_6030904110618004:qk]</field>
          <field>[textscan.42250.933698206019].[none:case:ok]</field>
          <field>[textscan.42250.933698206019].[none:method:ok]</field>
          <field>[textscan.42250.933698206019].[none:name:nk]</field>
          <field>[textscan.42250.933698206019].[none:timer:nk]</field>
        </color-one-way>
      </highlight>
      <selection-collection>
      </selection-collection>
    </window>
    <window class='hidden-worksheet' name='Tiempo de Path (mejores y peores casos)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.42250.933698206019].[none:name:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[textscan.42250.933698206019].[none:name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[textscan.42250.933698206019].[none:Calculation_1090904080547440:qk]</field>
          <field>[textscan.42250.933698206019].[none:Calculation_4320904101412484:qk]</field>
          <field>[textscan.42250.933698206019].[none:Calculation_5120904075913425:qk]</field>
          <field>[textscan.42250.933698206019].[none:Calculation_7310904080948018:qk]</field>
          <field>[textscan.42250.933698206019].[none:case:ok]</field>
          <field>[textscan.42250.933698206019].[none:method:ok]</field>
          <field>[textscan.42250.933698206019].[none:name:nk]</field>
          <field>[textscan.42250.933698206019].[none:timer:nk]</field>
        </color-one-way>
      </highlight>
      <selection-collection>
        <node-selection select-tuples='false'>
          <oriented-node-reference orientation='vertical'>
            <node-reference>
              <axis>[textscan.42250.933698206019].[avg:value:qk]</axis>
            </node-reference>
            <page-reference>
            </page-reference>
          </oriented-node-reference>
        </node-selection>
      </selection-collection>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Tiempo de Path (mejores y peores casos) Dash' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAIAAADdvvtQAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nO2dd3yU15X3z1Ond400KqPeJSSaQIBFt8EFGxJcsB0nLnHLZtPedcqb7Dqb
      d3eT7G564tiOe8PGgE03vQuBBEK919FoZjS9zzzlvn9IgCgaFzXK8/1DHxg989z7jH5z7jnn
      nnsvhhACAYGvCj7dHRC4sREEJDAuBAEJjAtBQALjQhCQwLgQBCQwLgQBCYyLKwTEM9HIFbAc
      z7HRKMNOScbIfeCDD440mce+APEcO9KzaJTl+Ni3Y8LOI1vePNbiHOsCNuQ819DOcV/u0TiW
      iTKskEADAPLy/5r/+v0XT9q9l14QKdc9928p7f/YFZz7r0/dLaGwSe6P89DWvemG2UsKx7qA
      az/87n+/tsvLglihL5y35NGHv56iIK64xtzR4CKTi9LjmJD92J5dSXErK/K117gZCldufWOv
      t6C4IJu4xq/HpHrL/77blfm/P3mA/jLvuim5QkD6+3/4wiqG66ra+vFpeO676xQYodbJw+o1
      D5AGisAQz/o8niiLSLFUIZMQfNTlD1EEFo4wBC2VEGwgFMUoiUohxdiQyxfCMOB4RImkSrkU
      B8RGQ15/kEOYRK6UiSjsohoRYiNBjz+EMA974SUmHPD6wwgjpHKFhCaxUdKVaBPv3fBMnLdu
      8yc7dmbNfXJposfl5wEjaYlSIeFC1m2v/9WW+0D8vWU0zwNANOSz24dwUqxQyCniUquB3ppd
      Z22LHt6A81G3N0RSWDjMkCKpCGMDoQghkirkUhIHNhLy+oI8hktkCqmIZII+/YxVjxZqSACE
      +JDfGwwzGEErVAqaQF6HkyNFwEYRIVGrpWzQ7wuGAaekcoWExplw0OsPIQyXypUSEYkBAOKD
      Pm8UEynlEhw4n8sDErlcTGMYAPAhrzfE8ojnEYZLFSoJTQDiIwGfPxTFSFqhUFAkDjzr93oj
      DIfTEqVCRgLrcfsQQfAMgyipTimOhAK+YBjDKZlCISJxNhz0BoIII6QKlZS+9MXhmLDPF2B4
      oMUypZwOedyBKIfhpFQul9Akz4Q83iAPuESukIpIngl7fAEOXSkgUXJ2bjIA23uQpCGnoEAD
      YD6z5Td/2agq/2Z+qqatet8b727pczHa9OL133hihbr7V//7oZjCu3otqtTCXIX7XPOA2FD0
      7X/+bp7v6I//uBl4zBuM6jNnPfncM4Xa4N53X9t6vD7IUQUVax9/6K40rWS41bB3YM97b2w9
      0RglaAyIbEABW+f2j97ZfaKFoVXF5WuefepuLXVptCVoiTGrMJdljhzcFwyEgvbaf//e7wcB
      VyXlf+O5ZxR1Hx7pdHMdr3zn7KkfP30nAJze/Idjb7hEuqw133xm3bz0C/qJttaeCxG63MxE
      b+/p3/35XUwBHR12bWaxkXTWtZrkxtmPP//tUrVv39b3thyoixDSgnl3P/XEHdbdr/12UyVR
      vO7d4jR724lXX3+/rsdJyhPvevjJ+5Ym/+Pn32mljbxjIOG2J753b8q2994+XNONpLpZFeue
      3jDn+AevfLj3XERsePC5H907LxUDAIjUbXtlozn5Z995UMe0/f5Xr+etf+7+hVkYAEDo8Ju/
      +fCcjY0GWVw6f/WGx762nOk98eH7mytbzSJ18rKvPfbQsoLBukOvvPFh11BQkVhw76PfWpMf
      /cu//sFM0AGHy7jy8R8sU29978MDdV2ENGHe3Q8+tjz72MevbjxYz1PqR3/6P3cVKEc+jPDQ
      7o3v7TlWbfND2qx7fvbjdaff+fVrR3sIsap4yfofPDK/Ztvbr39yMkQq1zzxwtfKVMc2v/nh
      vrM+BrtCQNdAX7zyjtKDVQAuU9OmDz5JqthwdzLdWrln56a9JU/khAMh3YL7fv417J23N4YK
      Hvm/6xQf/u0vJxvNeamAyxPufeiJIqXz43fe37Wvikvs3FobeORHv8wR2V76w9t7svOfuaNo
      uImeU9s+OR/85r/8Kltp/t1P3gQuWr1v65Ee0f1PPUd5+z/bvflAffn9s/UXuxS097/yHz+g
      MZbDUx4vz5Zpo8/+yw9tTtuRPZ8eON72w/Xr5hw+4yr5xnP3lskIOwBkLlj/yLLUfa/9Yeve
      U5cExEWH7E6KTlcpMbADz9iVeU/9dB3/9p9eZZc+/auH6Vf/573TTX0Ec2BHbehrTzwrjQzt
      37F995lZj9zx2GNO+3tWgJB520fb3PpFv3h6oevsjrf3bCvI+yYAYMrs73//BwlK0ektf611
      xz/89J1oqG3PwU3Higzd/c7sJQ/ctbg0Mz1xxBJikuIVy8QvfljXvzSl/5RbaijNTx1lbrG4
      gsVPrF8abjvw0id7q0syBja+2S+f/8zz67x9Nds/2pKTvK7qo4+UZY/+x7LM+l1v7v9o15yf
      rQTgifiSF76/KlGvOfzyC7WhvCeevSsy1Lxj+0eVaU/29vXOuPOp1XMyMjIVF1phu0/t2XXG
      vOyxf5mXxDX04XKg5619UjnLNtBycufBvW2r8nt6zcnz1923fGZmRqrl7MaNR8zr//nFIq3v
      8wVESZRKCQUAXrdpaCjY+OkblQAAoEzQOEM5QMlzCwoL8zi9TqVMz8vJUqUny4dYDgBIkTQx
      OTUjNXVOxp7tDnNfqFuWWTI3P1stySpKfLnH4b/YhLm3i06fNa8gUy4i5AA8yw709zr6nG+/
      XDt8QZ/ZAaMEREqVMxetTNMr0/OL8xKwtqN739i4o88R4BFkpgdJpUpCYiGFNsUQF3Q5ASAp
      qyAjPaVsZvr+c+FLD4aA53nACAwHAMBwPKt4dm4Wa4wHeVZ+Zr48S7fRy3GDPZ1uq/3dV1qH
      3yQ228VLM7UKMVgBfM4eP5O/cH5eVibCil8/fsDrDwFAxszyoowUxmcdMA9Y25veaD8FAICT
      AwHZ+gfXf3b4xO5Pe2etvPeOOVkkjgGANK5wQTF2dH9VZrDWUPxYpm60p4nL1fFGY5pCO1f7
      Ya3F3dbd4etD+186tx8AANQ95sEhO7O0oiI7jYKSwhONTe4gAEjyS2fnpKdQmKunc8hqH3ql
      9fiwHJ1c/NqHn9578Mj2TxsW3PXAktIUEgOAyEDvoCwub+H80mQxpOVAxN65/eP3Dla3BaM8
      gDZAJNxz/wZ83+G92z8tWnyP3tQXTSqumJGlEJOfL6CLqDQp+nh59sL1M5PlhFiZk52pDzbE
      uJ4L+Tqaz7OdtsNN1sSy23OT0Y4Pag+dzEgmzNUmxezlmotXJqZnhStP7z6WkaVx+gBwkkxJ
      TdM70lavWqCiSWWCMSc9efSdaamqbOndswwAABA2nzx8ik8qf3xtSu3BbY5ohOFJisKcfW3n
      6jUJ2ujFd2FXBAAkpdOoue4hvx80MCbJGdma7ri71izTiEh5XHJ2hnHUJ5JQoBGdqTx4Uu4c
      OneClqh0ahkAYBgGAKRIkpKcbIgWrl4+S06RmuSMHKPeN8gUzV4AhzZt2XdqcUmGXEQAAE5K
      y5csP/zXjw7wid97NPdyx5z32Prqaqu9zUfsElmqvgjlKkOyeXeV55MUZTBmJ4g8zsPiys92
      auan1B2pYlQz9LILD4sBgCojW98dl7dmWamIpOKS0zOSNZ5BX0nZfH7vp/sOnSzJf0AvBgCR
      MTPJc7J672eHSg3Q0odmpTjOttqXrH9a7a/buaM+HOGAkufPKqcrt2/bd+z5xRmSfVW7jp/O
      lrq+jIASC9c/cNer77xX6WGQJP27//aCIWYQwvqsO9/9S4QlMmYtXXvH7DRZzv2dts1v/snP
      isruenTVrLSLV6aX3bm60fTpq3/kJWIccCDoWSu+3jv41kevvRThIKnikd8+nzpmM7R27vzi
      E+/ufqtTnZ2kjLp6HQHZ7Ir5Zzft/HVH6zPP3zPmGzFRTkEud/qkxeZXj/0U+RXr7jC/s/n1
      v4c5SChb+6t/utRtEOlXrr9v4PX3//a7g5Q248FvbciOF3928fa0fOGd6/veeOP9V09FeSxr
      9dP/9U35wZ0fvHOkiVImr3pkjuiiV4dh8bkFGQoJbyjN1sovbx/ZWo//teEQJtOvuv+xORkp
      eQ89av/g41f+tp8nZCse/f4Tq/PXPvDg3/+x8XdHfJr0uQ88dqeeGBVEA16x7lvmdz58/e/H
      ORCVrX36O2uokzve3nS0nVAkPvDMPNXIX5BMnX3H3e3mnZtf2cNQ2WX3LVtclBN//LP3X9Gn
      5ih0fG9PP9W/7aUd1bgkbuWG+3PLkjZYbRvf+vNmBscmKbvjrtv2s3fPPvlPL8xJlU7G/ScG
      FNz98n9Xi2/7yWPLKfwLZSiCnoGGs40Htn8wmHn/n/7prgnpBeO3nD5+eMfuM3M2fH9duXFU
      QiGw+0//VSVe9KPH71RQE9LUxPMlLNCXAidpuUxKEpOdNxofmHTx1x9m6z3whb9EHmvTpxs/
      kRWvfGrtwonqRdTVsW3XuYLb160oTb48HYXREqlURF85+F5PTJYFErhFEObCBMaFICCBcXGl
      D9TQ44tO6CyhUoIlab7URJPAjcSVPtBdP6+2uKJjXf0VWJRH//xBo0gkmsB7fkFYlsUwjCCm
      Qb4sy+I4juPTYOAZhiEIYsqanqwobDQymUwul3/+dRNNJBIhCIL8MsnSCWyaJMlp0W44HKYo
      asqaFnwggXEhCEhgXAgCEhgXgoAExoUgIIFxIQhIYFwIAhIYF4KABMaFICCBcSEISGBcCAIS
      GBefIyAMAzGNk4LMBMZg7IlGDJtRrC83iiQkxnO82eTZVe8Lf85SdIFbjrEEhBeV6FIigV2V
      7jCLCAI3JCpWzUR7z/pDU9o9geudsQTEN9cNNY6qFLK5I/WjSrsNqZp5isi2xmDR7KS1eWK/
      I/DxcSuVFHffTFnzWevBrjB79S0FbkbGHMJ4BNpkzbeXyL1uOj+V2Le3Z2dXdFhRhjTtP99n
      VHT3bWsMz8tTnD7ZeXSA4zH6hSWaw0dtdyxIaLD2mQNCrf4tQaxiq0yjNDQQ1RvJHWdD+UYp
      2RVlAAAg4gsdrPUsVwBQ4kwDXbI8PaPNvvksL8IiZnswRMXHiwhriCVwAACKAACYrrUfCKFb
      sGmYwg88loD6B4KK5fqBpiGNTlbXGGAuvO5yhuwRBAoAJviL39cDTvzw8dwKx9DIEIeABzQ3
      ky42kgBgUBPRaHRaavM4jsMwjGWnYTjlOG64qnVamuZ5HpuqtWSxBGS3+I62S+Ya5Jg3cMjK
      XOMKmfTRctmZ+qAYca5gwBnR5KYqxZGILcxbOriqjigALMqjV5XTEolkkh4gBkJJ6xQQ6yuS
      XahfmUi0DAQxrfqeEtnoS60DnsMdYQgET5thyTzt2RP9p/pCm47akxLF+09ah4KCA3SrEOvb
      SeGY3xvqtIY4lSwTx3CAi2mgQZN7EAAA2pqH2ppHXjT1ut7odU1iZwWuP2JZoOYWe11YtH5x
      QjoKbW/wC5G5wNWMmUicPTuuzECTBO4PcCIFnR8vtvSEuSntm8ANwFgWCDmdYT9BJVFcU1/A
      jdFZ+mlwRQWuf8YUUE+Pt2Ew6g1xbj8TZoAir+c9RgSmjVg+UGuzvT5CrV2kT2ECOxsDgg8k
      cDWxBCSRUgYlxTCgjJfOThQLOyQIXE0szyYjQ6V0e98/HQRAPk9EKOUQuJpYAmI5LDdfwyqk
      CPi2RvtQlxCFCVxJLAH1dTneDotIAADe5mYFCyRwNbEElGBQrrlNIwMQ0ajysKnLOR3TkgLX
      N7EE1N5q+2XHEAaQVZAwhwbBAglcTSwBZWXrH1iokgDIJERdpWfK+iRwAxFLQJZBz6dHgiQA
      x/OuCd33TuCmIZaAjOm6Z5arI35OIiMJnq860fvWuaAwkAmMJpaAaBHUHOp9sy6QkZuwNJEw
      FqvizwUtU9Y1gRuBWAIackYyFyf9OJtRKIiqSicjgsCU9UvgBiGWgAa6HL9zBfOTaKcl2O5g
      5f3gm7J+CdwgxBKQSErPn6FNCIcdOYpo1N3jE/wfgSuJNZmak68r14kNCQSiZauKZEJBkMDV
      xBIQyyGSxnVxkkQlybG8UCgvcDWxBNTZ7jxhDSFMpI74dzcHhZlUgauJJSBtvGJuMmZ28MmZ
      moVGWtjjReBqYqkiJUEcGuJ0cnbPeb9eLxSUCVyDWALq7vFHlOLGOpdMjqrbA9damipwqxNL
      QH5vqMvF5Bdq0wl20Ce4QALXIGYYX6ArETF7a50mkK0qlglDmMDVxBIQwwBJYRSFkxTGR4Uo
      XuAaxMoOdrXb9xOamRkym8m1rykgjGECVxNLQDnZ6vig7+/bhW0RBcYkloBwglp5R9qCRRyG
      8edOWT4WjJDAVcQcwnpc+1XRhjP+4nJVl1VY0yNwDWJGYdmaNGAHQhFziKrIlV7UGk4S5QuM
      P6xQAmCzylL+88nc5yuUcgJbtDD1/z2e8+35SomQtL5liJkHCnP6JPV9FfGLU0XeIHexmCMj
      R3dnsdKoJoCSrC4Vbf6kV56VkB8nub2I/ni/OSlHFycTFHSrEGsI624eej2gXJQlrqk2V/WE
      Lgqot92xQy1ZpwUQkxI+YndEGKA0SimOIi5fNExTiTTOaSBOQQBAqo7gOI5hpiGPzfM8TNMG
      sTzPsyw73IGpb3p4n82paW4sAZG3VahpK16+QCUByE+RxossWy5MyLMsxwx3jweE4xQJLIcY
      lsMwnMABZ3gfj0QkppBgACChsena8BZd4BZsesqaG0tAXHubj4gQZAuWrCZJ4O1B7hqdCgTq
      7PF335GqZdwdFk+aU3/nwkTa57cEOFcUuodG3G6SJGmanrRHGBOE0HTt0ooQmq5dWnmen8qm
      x/pwkdUaycqLXzlLq5bgBHBg8x3rvbRBR2eL9Q2aA+D2HDQVJIlcVv9AiP/kQH9OAmW3BtzC
      GrJbhljfTg745nOWo31hAOTzRkeH8T5PeLjAPuANV3vDwy963KFqt5B1vLWInUgk582Pzy1k
      APjaqsGPm4SiRIEriSUgMY3VnOh/rcYnzKMKjEVMB5OF/IXJv5nJA/DnTg1uErZJFLiKMQVE
      4NDSZPlFu3V4c1aW5TkcMB4EayQwmjE3Gs+boZsp4Qd8nD/Ki2giTi0mQ77dwomFApcz5omF
      TeeHvCmKnHhRlpYIBhlTr6t+ICyURQtcQSwfyGTymUzCcniBWHxOlpaiCRmFsQwXiE7f6XsC
      1zGxBCTXyh5eYchR4NFg+KP95vN2IQ10OQhB2A20Aohbdd8Ajo315MkpyiQ2tK0qmJqtLUsV
      N9iFisTLadwKB/4dUsth9a9Bop7u3kw+YS+07gKVEYIOkGoh6IAzr8USUEe7o1KlryjR2Ad9
      O1sE9VxF2AOublAYgL8FEmQIQfs+2PEDICiIBgHxgDiIUc6xapWOHiBWzFGrCCwrQcS5Q2/V
      CmfOXZNbwDnkGHD3wrl3gAnCxVCckoIua8wwvrsrnCIiDlYNEQAAfJ81KmwvdYtiqoYzr4Gl
      DqwNABgQNBjnQeFakOshec5YAsJ0etnyYrVRxLVYopp4cSofOT8oaOha3HwGCCFw90HPMQjY
      wd4GDZuBDQMAkBK47Xsw90kQKYESD187ZkFZ5UlzmMXmcL4PGgOZBQmLpcJ5c5eD0AXtoJtE
      RAgB4iHkhp5jcPR/wNY07OUAYEDLQZsJs74BJQ+MDhcQQjFronu8FSsMv5yJ8eHIpgNBwQG6
      Eo4d+XkT5Mg4Bmwt0LIDql+DwBAAQFweMAEwzAB9PhTeB4kzYdShlQihCMtXdjpiCcjvDtV0
      BxgxZ/KHe11CEHYVXAQAgI8CumHHdjYMHjN0HYLm7eBoB68ZEA8SLZQ+BHOfAAwDmR7EqouX
      hxnO7os0mL3bzpt7HYEBVyjm0uZC/d0ZMp/fa6c195Vyr5/2CyIaBQIuCgDA3ZgCYqPQfQTa
      9kDDFgg5R15UGaFgDWQth6zlgF9WVe0LMwdbbCc67Mfa7YOe8MXXYwmIwCEY5EQKkvPzuHDm
      7tUMu5YccyMJKBoAVw9Y6qHqZbC3Q9QPgECkAG0m5N0NRWt5TUaYxyUYjgFwPLJ4w11DAZMz
      +GZld68jGGZ4Ase0MtqgFM9IUS3Ni3mYd3ubszHOsDRJkeNyfVgtmJ/LQQjYixboRvCB7G3Q
      sBWGWqCvEnyWEcdfrII534LUcjAuAIkaMKy2z/XWyZ7l+fFJKsmOevO5PnfjgJdDCABwDJbk
      6u8pSUxSS/INCq2MxjAsloAiweixM9aODgrneRZwDK61sudWho0AALDRC9HKdUnED5Y6qN8E
      DZsh7B3RjUQLhmKo+BEkzQJaDhgOGIYQCkTY3+5pOdXl3FE3iGPAcAgAFGKyMFG5JFe/YV6q
      TERSBIaNGo5iHrqbpX92ZVyCnCCAO3mw/9UanxCIjQJdcKKZ69EC8Sy4+6B1FwychZ7j4LcC
      AOAUkDRkLoP5z0B8Ech0CAEAYjhk8YQ215jO9rtOdzsJHMMAEAKlmFxTmrQkV1+WrlVKKAK/
      hhsTS0AYyTdVD77UGwIAvz8qqOdKRixQ5DrygRDCg3as/yT0HIXzG4G/MO+A4WCYAcv/FeTx
      kFA07CBHWK5l0Heq27m30VJncg/bG7mI/PHqfJ2cxjAoz9BpZJ+zIjSWgHhELliUUFzCIODO
      nbIIRfWXgWAkCuOvAycaIeAi4LNA83bq/EZwdAIbAoIGRRJQItAXwPxnQZUC2gwEWDDK9Tq8
      p7oczRZvZadjwBUatp9aKa1XiJ5dmrWqKEFKf9EClVjXySRY9bHef9T4x/18NyVoxAJxzHT6
      QAhB0AENm8HaAL0nwd2HDcualkPFD2He0yBSDF/II9TvDB5tGzreYd/fbOMuHF2hV4hmp6pT
      tdL1c4y5CYovG23HEhBiseIlKb8p5QG4c1WWjwULdAXDAgIYCcemEoQgMATOTqh5Gwaqwdk9
      MlqJFLwmEytai2Uvh8SZQIoiDIcAzvW5/3G8u8nscfgjUQ5pZXRBonJ5nj5RLSlKUmpltIQm
      LneOvyixBNTaZPlLODQ3kXZYfac6hamMK7jgRMOFhNAUNYuAZ2HgLBz8FfSfAu6Cl6MwQNYK
      yF3NxJeQGiNBEL4wc6LFsr/ZihCq7nX1OoIAIKGIBenqZxZnLcjSicgJ2MYploBScuIenyfv
      tUSyypK1lOmjhtD1F2xMH2i0BZp8ASEEvkGwNcHxP4K9xcsQ50LxSkgr0TBE4gwovBeyVwIt
      5wnaave1tNiOdzj2NlpdwWiE5QFALiIXZOnmpmkeKkvVyCgJRXwVa3MtYgkoXiMyNdteOePP
      LU26W0uTEBKW9YxitAWKxLxy3Dg6oPoN6D8N1gZgggBwkFv0E+apJMKzaU2xLnM24ATPozqT
      2xlw/+1w5/kLIRUAaGX0Q2XGOWma8kydTDTxtdsxN9ns992+PPnP83DvkP+dPV5BPVcyqRYI
      8WBrAakOzr4Jh399KdBTGbm027q8S8Itoi4ufq8zQRWyVXU7d9YN2v2XdGxQimenab42O3l+
      hlYhpia+exeIJSCDTmRts33UFw4EWM8YK1KH1/3wPAqEOYzApSKciXAh9lYY69Al33kCLRDP
      ARsC83k49y70V4FEA4EhQDxgBMj1UPIQzFgfVWY0f9wCYAWAf9/exPI8wyEcAylNpGqlCQp6
      brpuWX58mk46qdIZJmY5h5dVFWoezsIAuPoa27aWa2zvcs+9uUvlkeY+//Yq+4IVmTO1WNjq
      /tO+Ie9N73IjAO6C4ZkQC8RzYG2E9r3QsR/6T19KDZBiyF0FxnIo/npYnrK5xmTzmU922jEA
      HMNCDKeRUqVG9ZxUzYIs3UyjmmWiFEVN+w5lgOF4xB/YvM835GYYBDx/rVwHRqer0aETg6dM
      URcjKUng3ts2+LXbk+NkDq9nunNrk85oCzQOAXEM+G3g6ATGDzv/D/gGR0YrkRIUBih9CHLu
      iMiSm1zY77a02f29bVb/cAqnJEX1ozvyJBShkVJ6hUgloYb9YnZqXY0xBZRbkvhsmZRBcPRg
      366uyLXlQEBzmzveqP8/8/F3d3sAscEwx4oIPYkr04jcRBIAjDqCYZhweAoD3QtwHMdxHMtO
      jjFkwiI2go38M8Bd/oDDTeN4zDiZZ3FHB9WwEevYB44OIEXARhAAkurZjOV8ziqUUWEJ0/Vm
      39l+86ZqUyDKAYBSTM5MUcpoYk2JYX6q4uK9IpGRYZRlWYTQRAVZn8tYAqLKZlCb3u/sj9M9
      UCw/1BUJXPsyrrnZecDByr6Rm6Xx8EDJJAQVYW0sb7OgficHAGWZ1L3TtMlmNBolCGKyjDnG
      XYzCSMQQlz9grKYRD14zdOyH6tfBO3CpmEukhJR8VLi2Cp/595pAwUBcQ3VXi8Xrj3ARhidw
      rCInbkmufkmu3qASExjQJH7NIi2EEEVRn6PdiWPMVRkEjnwB3k+zLE6MKWaCXL4kOU1EiCO+
      3QNeblD3zXtSvSanPcAHWAhEEAD4wgjDsCl7ntFgGDaJTWPYRd8Z46LY5a0Mt3tl0zwLnQeh
      rwp6T4DpNPAXnAJNOsz5FqSUQfKcwx2+X+1o6nYEjnRfmkGKk9Nfn53y7JKsz53ahMl+6qsY
      c12Y1Yp969t5CIAk4MVvq89WDn7UcNVURiTy1tZuCsd4nmc46NvduZvAOI5nb3r/BwB49lJo
      HdsH4qJga4b2/XDmVQjYgWcBEOAkpMwDXRa3+AULr6kdDB2uHjr87gl3KMpwaE6aRiujeR4p
      xORD81JLU9Q0iV+rmGL6GUtA7P59vYdHiZjj0DVdCZ5DkQs5K55HkVvndHluVOh+zTCe5wAx
      0FcFNW/CQA14TIA4AAxoGWSvhJzbQ2nL2/zitw/0t1rNLYNelkcYgIjEVxYn/PLeIp1cxCNE
      4Nh1Xkw8phPNcoi9juvsph9mlNVhLs+SMUG8Yz9mPgst2yHohLBnJCbX5aDcVb689eejSTYf
      84+3O1osIxuYUgRWmKhclBN3Z5FhRoqKInAAIOC6ls4wMYvqSaKkWFeeRNut3sub0HMAAA5o
      SURBVP11XpeQih7NaAvEXagsCzqh6VNo/pS0NEDEO/JbUsyrs/3Ji/uzN+wZkJzY5eq2n/eG
      WY5HJI4ZVOLCROUj89My9bIktZiYDmdxPMQSUHZR/Nos8lR3MCUtbi3GvVUduBV8my/KyLCF
      ASAI2KHtM+g4AE2fDBePjpgORSIqWmeW5G6Jlp/odp8+bbk4wkso4t7ZSbkJ8gfKjFOQL548
      YgmIwjG/N9RpDXEqWSaO4QCCgC4xLCBSBGwYeo7DQA2EPAA8YDiS6T3yzMHM+48FjDvbRY4A
      Z/Z08QhwDLQyOlktWTcreV6GNideLqJu+KOwYwmoucWePFe/frHCPujf3iDs7TKKwBDUbwK4
      EH+x4ZF/xOWZEm/fx8w44TOcq4o6AgwAAwBaGT3LqC5KUs7P1BUkKjVSasoSfZNNLAHRBK5W
      UvFKEfIFKeKWN0AIQcQLphownYHz74O7H3ASitbBsp9FGrf39vZY4hZ20nm/P2wKssDyAQyD
      FI2kKEl5Z3Hikly9mCJoEsOxr1T2dx0TS0D5BbrUaPClnbbcPP3qYtk/Km/VZT0Igc8Cte9B
      fxX0HAc2DIgHguZWvNioWtbeQx83Lzk3WNLXGORR//A7ZiQpNsxPm5GsKkhSkjeaX/yliCWg
      YATp4sVpDk6vpOKV8gW5XHVb8NbaaDzsAUcHHPkttO+7OD2OxCreMLMxce0f20sOt/ZcrE6X
      UESuQb4kR//QvFStGKeo6TkvbIqJJSDHoPeITCIV494hb/0tkV0GgOE1y2Fw98HpV8FvAZUR
      2vYAAItRQUxWb1i3zZdrD2V115FdDiuBYwoxqZXSJSmqu0oSS1PUCUoxgWMXpzZvemIuLKTI
      /HR1voGmgas8YtredrPX1SMEjnboOgLdR6HzEERHNln3gbSSmFuNz9iPV3R3DRscFoDVyeh7
      SpO+XZGhldFffCHVTUasx05IEEfN7pdPhwGQ0x66afPSCEHABoQIql6G8++Dpx94jgfMhRQW
      pA1QupeYe6qZLB9HAvBaGa2V0Uty9cvy4hNUIoNSfENnccZPLAENudj8inhjJoOAq62y9Htu
      xgPn7G3QtA1atoMmHUzV4DFxgDfymUdQ6RGutJbP4hli2ObkJsgrcvSrigxz0jQ4BjdZMPWV
      iSWgxDhRS/XgpqYAAAqHbqKZMZ4HVxdYG6H2fTDXQsCGEM+YG70g3c6t3sQtNvNxXpDygAOA
      US3JT1R8fXbKTKNGJ6dJ/GaLw8dJ7LXx+Oz5CZq0KAK+4axtR+tNYYG8g0BQsPEbYG8BxCOA
      IaTaylX0YCkuMn4fk8vBSNQ906heWZCwoiA+M052E6SMJ4lYAmqpN/+nXarFUYjjBm3hG1g9
      PAceE7R/BtVvgHcAEIpGgq18aiNK38JV1PGZUaB4wIDBRCQ+x6guTVE/WGZM1UpJ4nqvpph2
      Yh62Eid/cImBMXt8KlHbGfPBvhtqOn54zx42Aj1H4PwHMNSKrA0cD36QmJB+I/f1Q/zMARQH
      gBE4RmIYSWAb5qWWpWvnZ2jVUlqQzRck5mx8mtzX7cfV7MkmWJohO9bnvmEUxIRhoAYL+6Fl
      O9S+wyPMCppKfuFxvngHtyAK5PB8uU5GzzSq7ypJLDQotXI6QSme7n7feMQSUK8lvHZFQqIS
      GePYw8ec13sSCCHgGIh4oPMQnHsHDbUAj4UR2cTnf8gubUAZPSghAjSBY2oxma6TVeTErSoy
      pGgkFxfECHwFYgnI2u349ceBUqPEZva1Oq5v/XAM9J+Gxq3QdxJszT5eVMXnV/KFJqQ/ypeE
      YMS0pKglj5Sn3ZYdV5ysEjQzIYy5rGfNPXq8Cy1cqpYBAOjPHDe/V3edVXRwDHAMuLrB2ggN
      W3iPyWE1dfPxu7hHj/KlQ0jpAykARhFYqkqSZ1A8vTgzUSVOUksEv3gCGXNZj1xKdPZY/r7V
      jQMAIJ83eh1FYWwUBqqh/mMIe6B9LxfxtaOUGi5nK7/uPJ/FwEhqmMBgboZ2WW786mJDklpC
      T8R2OAJXMOYQJpLR2WmyC9kPhEfYoemtaEU8eEzgMUFfJap+Ews6BqPifhR3ml/2GVfWjQwR
      oBggZTSZrZPOMmpSddLZKYr8RJVMTAvJv8lj7LXxgCcZLkYlCPOFO53TtOmGzwL1m8DWDNZG
      5Ox0h1EI6I3c6mNcSTtK9oN0+CopTdw3I3FVUUJBojJZLcEwLBKJEARxzc1pBSaKMQUUjYb3
      HLI0TGVfroBnwWvmOw5Fj/2R8nSxiGhBqbV8+Q6+vJbPUcqlKjEVdARS1JLCJOXamcm3FyYM
      r4YRmErGEhCz/4BtGnZnHS4b9dtQNIAatgQ7T4Cj089gR/nF+7g5LZDhJOIMcdIfzEqZn6mV
      i6j6AU9BoiIjTnbLVlNMO2N97shqmeqSKJ7jmrt6TAdeLre8p4CAiY/byZW3wbyD3ExepF6Y
      q3vYqC5OVs3L0IrIEd8sz6CIfU+ByWaavrgBOzR9ClwUZj4CYmU46Au2HWk8f8ZjbtMEe09D
      7m5u3nnIZqUGY0LcCyXJc1LVyRrJLV55c30y5QJCCJxdsOen0HkAeBZJtH5MZq39rLaj18Tp
      AqDezd9hJxIW5urvM6orcuNKk9XX6a4CAgAw1QJCKNB16vjujZTNvoCWAxfs2fnnQVZ+LJJd
      i93Ba7MIieLRwsQVBfGJaomUJoSM3/XPlAooZOv83fYzH1lue4SMSnB6H5vVxKTX8xlKheKx
      BRl3liTrFaLJ2IpWYPKYyL+WRicrTKRsZn+n88o1HIjnTW1nD+/8INk1UC4uOxQtfd27SimT
      zkzV/DRPv6Y0SSGmMBDqRG88JkxAOEGsX5kM7uDKXMlfdgw6Rp0ewbQf7G47uamTOO+P78bm
      Plg+w9XpMIbhF/cULMjSXQypBG5EJkxABC5NVUbe2Gd94J60BBnhGDV19tPj3N6BRTQOSzIV
      vyzPWZxn+M7tGAZACnm/G58J/BNiCPEcD4jEZTi2KI9+/nbZ87fLVhaLQrgsUcL+6wrDhlxi
      Ybrq7JkqDPEnTxwHgKNHj179MxwOV1VVud3u8+fPWyyW1tbW3t7e3t7e1tZWi8Vy/vx5t9td
      VVUVDoev+fbhnyzLVlZW+v3+mpoau93e2NhoMpk6Ozs7OztNJlNjY6Pdbq+pqfH7/SdPnmRZ
      NsatJqo/J0+enIL+NDc3e73eKesPhi4/rvGun1dbXF/l8CKSFP30m8YdewfvXRL/2qc9ppGt
      t2BRHv3IIkKrUWenp03xVpvDc2EkOQ1eeSQSIcnpWdocDoevi43GvywsG9lTH167IrG7wWr3
      XybK4rwcuVw+UQ0JXFdM5LfzzGnTmdMTeD+BGwDBjRUYF4KABMaFICCBcXFlFFbT7okwE1m6
      KsIj8TJmWuIRjuOm65SFaWyaZVmCmLATLT+XKwV0M+FyuUQikVQqnfqmnU6nVCoVi6dhpaLd
      blcoFCKRaGqaE4YwgXEhCEhgXNzMQxjP8wAwXT4QjuPTUlwwxU3fzAISmAJuriEMcYO97c4A
      C3zU0tVcXdvsDEZ8tt5uiwcAuczdfUPez7/Jl4eL+Dsbz545W292BYGPmDsaq2tb3KGo19Ld
      Y/MBIIepy+SYlEUuXDTY3VxbU9fiCjLAR0xtDdXn27yRqGews3coCICG+jrMrjHOm5wIiBdf
      fHHy7j6VIC7aV3vw9Q93qXPmK4NtW/edRb6+joBcaj5+oF9aqLB9uq8hLjNLL5/48MTWVnms
      yYUH+w7UOwo13k8ONfDurh5GTXYfOGbT5osHtu5vTsjOivsC5w1+WYY6zxw7Pxgeau7wKhL5
      7m3HWll76wCWgJp3VXqTcsiuLfvbk3OytNLJOHIU8RHLzSMgNhKyBf1BU78ufz5mOzuI5d45
      U7PvbH+mKlTf1t/QZLn9wftz4iYlpJfr00uKcvQStq7XnUQMOSUlq4qk+2qtGTJvXedAXePQ
      vd+4P0M9KSG9XGfMTxbXN7ZS+kyRo9mvK7s9F/+szpEmctR1ms81OO9/8sEUxaQcWMtHfaf2
      Hrx5hjBKIs/PzxMRGAAgBMPJNBSORAGCvqCMRnZvaLLOU0QoGnTV1nfMn1/G80CSBIYBHw5H
      AUK+kIxkbd7w5B3liNPyrIyUwYF+lsdIkgDA+HCEAQgFInIiavNGJsnLHWw7183F3zwCGo1U
      KvN6HV6fR5ZgkAEkly7bcN/cmt07elyTcvp42Gs5efCIpnTV/Nx4uVzmdjs8Ho/SkCgFMM5Z
      +fDaWZXbtps8k7JQ02VqbbHxGUla75BTpBC7nA6Px6NOSpQApM9b/ei6kkObPx30fZUCr88F
      xzA8NHiTCYjQxBtkIjw+a2Yu0bfphGXBnHyRQhenkkgMxbfPia+r65iMVi0tp07Utx7a8tZf
      Nh0z5M1JY9o2n3YvnJMjUcXFKcXSpNIVJaq6xu7JaJoW0x0ntry/v71iRUVW8XyDr27r2eBt
      szIlqnidXCRNnr28UHK+pW8ymk4sWrxhwwYhjBcYFzeZBRKYagQBCYwLQUAC40JYRywwQjQc
      CF9YzUeJpGIR+UWm0wQBCYzQW3vwRIu55XxzcuHcWQuWlxcnfRFxCFGYwGic7/75vYrHvpum
      4ntq9n12qo0TG9bcWXRgaw2pCrC4QcY53dL0+2+f1Xx895k2mzhroeADCVwTXqHPnjd3Rnio
      ZcDqNA15565cF+qtzyhbhhxt3hAy5pTOyNQ1NbcLAhK4Jt7KnTs6AhKtlAAAiUQpk6o18XKV
      VEKL6KCzZ+eeoyBWSUW44AMJXBOKIiLNbe0KTBIOXzkJg+Mkiji6TRQeogUfSGA0iGVYnKRw
      DHEsy3IIJzAcw3keESTBcyyOkzzP4TjOsQwCHDBMEJDAuBB8IIFxIQhIYFwIAhIYF4KABMaF
      ICCBcSEISGBcCAISGBf/H8bS6r+13gc0AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Tiempo de Path (casos aleatorios) Dash' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Tiempo de Median (mejores y peores casos) Dash' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Tiempo de Median (casos aleatorios) Dash' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Tiempo de Explorers Random Dash' width='192'>
      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
      2HM1CJIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Tiempos de Explorers Best-Worst Dash' width='192'>
      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
      CBMUWECYoPj/tEAv/qMm5qoAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
